age -> birth;
birth -> low;
}"
# Generate the DAG
dag <- dagitty(dag_string)
# Extract DAG data for plotting
tidy_dag <- tidy_dagitty(dag, layout = "circle") %>%
mutate(
label = case_when(
name == "birth" ~ "Birth",
name == "smoke" ~ "Smoke",
name == "age" ~ "Age",
name == "low" ~ "Low",
name == "high_bp" ~ "High BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
TRUE ~ name
),
# Highlight exposure and outcome nodes
node_type = case_when(
name == "smoke" ~ "Exposure: Smoking",
name == "low" ~ "Outcome: Low Birth Weight",
name == "age" ~ "Age",
name == "high_bp" ~ "High BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
name == "birth" ~ "Birth Order"
)
)
# Plot the DAG with custom labels and node highlighting
ggdag(tidy_dag) +
geom_dag_node(aes(fill = node_type), shape = 21, size = 12, color = "black") +  # Highlight nodes
geom_dag_text(aes(label = label), size = 4, color = "white") +  # Add custom labels
scale_fill_manual(
values = c("Exposure: Smoking" = "darkred", "Outcome: Low Birth Weight" = "darkblue",
"Age" = "darkorange", "High BP" = "darkorange", "Preterm" = "darkorange",
"Neocare" = "darkorange", "Birth Order" = "darkorange"),
) +  # Colors for exposure, outcome, and other nodes
theme_dag() +
ggtitle("DAG: Smoking as Exposure and Low BirthWeight as Outcome")
# Adjusted DAG String with smoking as exposure and low birth weight as the outcome
dag_string <- "dag {
smoke [exposure];
low [outcome];
smoke -> low;
age -> low;
high_bp -> low;
preterm -> low;
age -> smoke;
smoke -> preterm;
age -> preterm;
birth -> preterm;
high_bp -> neocare;
high_bp -> preterm;
low -> neocare;
preterm -> neocare;
age -> high_bp;
smoke -> neocare;
age -> birth;
birth -> low;
}"
# Generate the DAG
dag <- dagitty(dag_string)
# Extract DAG data for plotting
tidy_dag <- tidy_dagitty(dag, layout = "circle") %>%
mutate(
label = case_when(
name == "birth" ~ "Birth",
name == "smoke" ~ "Smoke",
name == "age" ~ "Age",
name == "low" ~ "Low",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
TRUE ~ name
),
# Highlight exposure and outcome nodes
node_type = case_when(
name == "smoke" ~ "Exposure: Smoking",
name == "low" ~ "Outcome: Low Birth Weight",
name == "age" ~ "Age",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
name == "birth" ~ "Birth Order"
)
)
# Plot the DAG with custom labels and node highlighting
ggdag(tidy_dag) +
geom_dag_node(aes(fill = node_type), shape = 21, size = 12, color = "black") +  # Highlight nodes
geom_dag_text(aes(label = label), size = 4, color = "white") +  # Add custom labels
scale_fill_manual(
values = c("Exposure: Smoking" = "darkred", "Outcome: Low Birth Weight" = "darkblue",
"Age" = "darkorange", "High_BP" = "darkorange", "Preterm" = "darkorange",
"Neocare" = "darkorange", "Birth Order" = "darkorange"),
) +  # Colors for exposure, outcome, and other nodes
theme_dag() +
ggtitle("DAG: Smoking as Exposure and Low BirthWeight as Outcome")
# Adjusted DAG String with smoking as exposure and low birth weight as the outcome
dag_string <- "dag {
smoke [exposure];
low [outcome];
smoke -> low;
age -> low;
high_bp -> low;
preterm -> low;
age -> smoke;
smoke -> preterm;
age -> preterm;
birth -> preterm;
high_bp -> neocare;
high_bp -> preterm;
low -> neocare;
preterm -> neocare;
age -> high_bp;
smoke -> neocare;
age -> birth;
birth -> low;
}"
# Generate the DAG
dag <- dagitty(dag_string)
# Extract DAG data for plotting
tidy_dag <- tidy_dagitty(dag, layout = "circle") %>%
mutate(
label = case_when(
name == "birth" ~ "Birth",
name == "smoke" ~ "Smoke",
name == "age" ~ "Age",
name == "low" ~ "Low",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
TRUE ~ name
),
# Highlight exposure and outcome nodes
node_type = case_when(
name == "smoke" ~ "Exposure: Smoking",
name == "low" ~ "Outcome: Low Birth Weight",
name == "age" ~ "Age",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
name == "birth" ~ "Birth Order"
)
)
# Plot the DAG with custom labels and node highlighting
ggdag(tidy_dag) +
geom_dag_node(aes(fill = node_type), shape = 21, size = 13, color = "black") +  # Highlight nodes
geom_dag_text(aes(label = label), size = 4, color = "white") +  # Add custom labels
scale_fill_manual(
values = c("Exposure: Smoking" = "darkred", "Outcome: Low Birth Weight" = "darkblue",
"Age" = "darkorange", "High_BP" = "darkorange", "Preterm" = "darkorange",
"Neocare" = "darkorange", "Birth Order" = "darkorange"),
) +  # Colors for exposure, outcome, and other nodes
theme_dag() +
ggtitle("DAG: Smoking as Exposure and Low BirthWeight as Outcome")
# Adjusted DAG String with smoking as exposure and low birth weight as the outcome
dag_string <- "dag {
smoke [exposure];
low [outcome];
smoke -> low;
age -> low;
high_bp -> low;
preterm -> low;
age -> smoke;
smoke -> preterm;
age -> preterm;
birth -> preterm;
high_bp -> neocare;
high_bp -> preterm;
low -> neocare;
preterm -> neocare;
age -> high_bp;
smoke -> neocare;
age -> birth;
birth -> low;
}"
# Generate the DAG
dag <- dagitty(dag_string)
# Extract DAG data for plotting
tidy_dag <- tidy_dagitty(dag, layout = "circle") %>%
mutate(
label = case_when(
name == "birth" ~ "Birth",
name == "smoke" ~ "Smoke",
name == "age" ~ "Age",
name == "low" ~ "Low",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
TRUE ~ name
),
# Highlight exposure and outcome nodes
node_type = case_when(
name == "smoke" ~ "Exposure: Smoking",
name == "low" ~ "Outcome: Low Birth Weight",
name == "age" ~ "Age",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
name == "birth" ~ "Birth Order"
)
)
# Plot the DAG with custom labels and node highlighting
ggdag(tidy_dag) +
geom_dag_node(aes(fill = node_type), shape = 21, size = 15, color = "black") +  # Highlight nodes
geom_dag_text(aes(label = label), size = 4, color = "white") +  # Add custom labels
scale_fill_manual(
values = c("Exposure: Smoking" = "darkred", "Outcome: Low Birth Weight" = "darkblue",
"Age" = "darkorange", "High_BP" = "darkorange", "Preterm" = "darkorange",
"Neocare" = "darkorange", "Birth Order" = "darkorange"),
) +  # Colors for exposure, outcome, and other nodes
theme_dag() +
ggtitle("DAG: Smoking as Exposure and Low BirthWeight as Outcome")
# Adjusted DAG String with smoking as exposure and low birth weight as the outcome
dag_string <- "dag {
smoke [exposure];
low [outcome];
smoke -> low;
age -> low;
high_bp -> low;
preterm -> low;
age -> smoke;
smoke -> preterm;
age -> preterm;
birth -> preterm;
high_bp -> neocare;
high_bp -> preterm;
low -> neocare;
preterm -> neocare;
age -> high_bp;
smoke -> neocare;
age -> birth;
birth -> low;
}"
# Generate the DAG
dag <- dagitty(dag_string)
# Extract DAG data for plotting
tidy_dag <- tidy_dagitty(dag, layout = "circle") %>%
mutate(
label = case_when(
name == "birth" ~ "Birth",
name == "smoke" ~ "Smoke",
name == "age" ~ "Age",
name == "low" ~ "Low",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
TRUE ~ name
),
# Highlight exposure and outcome nodes
node_type = case_when(
name == "smoke" ~ "Exposure: Smoking",
name == "low" ~ "Outcome: Low Birth Weight",
name == "age" ~ "Age",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
name == "birth" ~ "Birth Order"
)
)
# Plot the DAG with custom labels and node highlighting
ggdag(tidy_dag) +
geom_dag_node(aes(fill = node_type), shape = 21, size = 15, color = "black") +  # Highlight nodes
geom_dag_text(aes(label = label), size = 3, color = "white") +  # Add custom labels
scale_fill_manual(
values = c("Exposure: Smoking" = "darkred", "Outcome: Low Birth Weight" = "darkblue",
"Age" = "darkorange", "High_BP" = "darkorange", "Preterm" = "darkorange",
"Neocare" = "darkorange", "Birth Order" = "darkorange"),
) +  # Colors for exposure, outcome, and other nodes
theme_dag() +
ggtitle("DAG: Smoking as Exposure and Low BirthWeight as Outcome")
# Adjusted DAG String with smoking as exposure and low birth weight as the outcome
dag_string <- "dag {
smoke [exposure];
low [outcome];
smoke -> low;
age -> low;
high_bp -> low;
preterm -> low;
age -> smoke;
smoke -> preterm;
age -> preterm;
birth -> preterm;
high_bp -> neocare;
high_bp -> preterm;
low -> neocare;
preterm -> neocare;
age -> high_bp;
smoke -> neocare;
age -> birth;
birth -> low;
}"
# Generate the DAG
dag <- dagitty(dag_string)
# Extract DAG data for plotting
tidy_dag <- tidy_dagitty(dag, layout = "circle") %>%
mutate(
label = case_when(
name == "birth" ~ "Birth",
name == "smoke" ~ "Smoke",
name == "age" ~ "Age",
name == "low" ~ "Low",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
TRUE ~ name
),
# Highlight exposure and outcome nodes
node_type = case_when(
name == "smoke" ~ "Exposure: Smoking",
name == "low" ~ "Outcome: Low Birth Weight",
name == "age" ~ "Age",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
name == "birth" ~ "Birth Order"
)
)
# Plot the DAG with custom labels and node highlighting
ggdag(tidy_dag) +
geom_dag_node(aes(fill = node_type), shape = 21, size = 13, color = "black") +  # Highlight nodes
geom_dag_text(aes(label = label), size = 2, color = "white") +  # Add custom labels
scale_fill_manual(
values = c("Exposure: Smoking" = "darkred", "Outcome: Low Birth Weight" = "darkblue",
"Age" = "darkorange", "High_BP" = "darkorange", "Preterm" = "darkorange",
"Neocare" = "darkorange", "Birth Order" = "darkorange"),
) +  # Colors for exposure, outcome, and other nodes
theme_dag() +
ggtitle("DAG: Smoking as Exposure and Low BirthWeight as Outcome")
# Adjusted DAG String with smoking as exposure and low birth weight as the outcome
dag_string <- "dag {
smoke [exposure];
low [outcome];
smoke -> low;
age -> low;
high_bp -> low;
preterm -> low;
age -> smoke;
smoke -> preterm;
age -> preterm;
birth -> preterm;
high_bp -> neocare;
high_bp -> preterm;
low -> neocare;
preterm -> neocare;
age -> high_bp;
smoke -> neocare;
age -> birth;
birth -> low;
}"
# Generate the DAG
dag <- dagitty(dag_string)
# Extract DAG data for plotting
tidy_dag <- tidy_dagitty(dag, layout = "circle") %>%
mutate(
label = case_when(
name == "birth" ~ "Birth",
name == "smoke" ~ "Smoke",
name == "age" ~ "Age",
name == "low" ~ "Low",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
TRUE ~ name
),
# Highlight exposure and outcome nodes
node_type = case_when(
name == "smoke" ~ "Exposure: Smoking",
name == "low" ~ "Outcome: Low Birth Weight",
name == "age" ~ "Age",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
name == "birth" ~ "Birth Order"
)
)
# Plot the DAG with custom labels and node highlighting
ggdag(tidy_dag) +
geom_dag_node(aes(fill = node_type), shape = 21, size = 13, color = "black") +  # Highlight nodes
geom_dag_text(aes(label = label), size = 2, color = "black") +  # Add custom labels
scale_fill_manual(
values = c("Exposure: Smoking" = "darkred", "Outcome: Low Birth Weight" = "darkblue",
"Age" = "darkorange", "High_BP" = "darkorange", "Preterm" = "darkorange",
"Neocare" = "darkorange", "Birth Order" = "darkorange"),
) +  # Colors for exposure, outcome, and other nodes
theme_dag() +
ggtitle("DAG: Smoking as Exposure and Low BirthWeight as Outcome")
# Adjusted DAG String with smoking as exposure and low birth weight as the outcome
dag_string <- "dag {
smoke [exposure];
low [outcome];
smoke -> low;
age -> low;
high_bp -> low;
preterm -> low;
age -> smoke;
smoke -> preterm;
age -> preterm;
birth -> preterm;
high_bp -> neocare;
high_bp -> preterm;
low -> neocare;
preterm -> neocare;
age -> high_bp;
smoke -> neocare;
age -> birth;
birth -> low;
}"
# Generate the DAG
dag <- dagitty(dag_string)
# Extract DAG data for plotting
tidy_dag <- tidy_dagitty(dag, layout = "circle") %>%
mutate(
label = case_when(
name == "birth" ~ "Birth",
name == "smoke" ~ "Smoke",
name == "age" ~ "Age",
name == "low" ~ "Low",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
TRUE ~ name
),
# Highlight exposure and outcome nodes
node_type = case_when(
name == "smoke" ~ "Exposure: Smoking",
name == "low" ~ "Outcome: Low Birth Weight",
name == "age" ~ "Age",
name == "high_bp" ~ "High_BP",
name == "preterm" ~ "Preterm",
name == "neocare" ~ "Neocare",
name == "birth" ~ "Birth Order"
)
)
# Plot the DAG with custom labels and node highlighting
ggdag(tidy_dag) +
geom_dag_node(aes(fill = node_type), shape = 21, size = 13, color = "black") +  # Highlight nodes
geom_dag_text(aes(label = label), size = 2, color = "white") +  # Add custom labels
scale_fill_manual(
values = c("Exposure: Smoking" = "darkred", "Outcome: Low Birth Weight" = "darkblue",
"Age" = "darkorange", "High_BP" = "darkorange", "Preterm" = "darkorange",
"Neocare" = "darkorange", "Birth Order" = "darkorange"),
) +  # Colors for exposure, outcome, and other nodes
theme_dag() +
ggtitle("DAG: Smoking as Exposure and Low BirthWeight as Outcome")
# Load the dataset
birthweight_original <- read.csv("birthweight_original.csv")
birthweight_analysis <- read.csv("birthweight_analysisdata.csv")
# Remove the id variable
birthweight_original <- birthweight_original[, -c(5)]
birthweight_analysis <- birthweight_analysis[, -c(5)]
# Remove any NA values
birthweight_original <- na.omit(birthweight_original)
birthweight_analysis <- na.omit(birthweight_analysis)
# Remove negative values in bp_sys
birthweight_original <- birthweight_original[birthweight_original$bp_sys > 0, ]
# Categorise age into young, middle, and old
birthweight_analysis$age <- cut(birthweight_analysis$age, breaks = c(0, 20, 34, 100),
labels = c("young", "middle", "old"), right = FALSE)
# set reference as middle age because of the U shaped relationship between age and low birth weight
birthweight_analysis$age <- relevel(birthweight_analysis$age, ref = "middle")
birthweight_analysis$birth <- cut(birthweight_analysis$birth, breaks = c(0, 2, 100),
labels = c("primiparous", "multiparous"), right = FALSE)
birthweight_analysis$birth <- relevel(birthweight_analysis$birth, ref = "multiparous")
model <- glm(low ~ smoke + age + high_bp + birth, data = birthweight_analysis,
family = binomial)
summary(model)
View(birthweight_analysis)
hoslem.test <- function(model) {
observed <- birthweight_analysis$low
expected <- predict(model, type = "response")
chisq <- sum((observed - expected)^2 / expected)
df <- df.residual(model)
p_value <- pchisq(chisq, df, lower.tail = FALSE)
return(p_value)
}
# Calculate the p-value for the Hosmer-Lemeshow test
p_value <- hoslem.test(model)
p_value
odds_ratio <- exp(coef(model)["smoke"])
odds_ratio
# 95% Confidence Interval
conf_int <- exp(confint(model)["smoke", ])
conf_int
# Build the logistic regression model
model <- glm(low ~ smoke + age + high_bp + birth, data = birthweight_analysis,
family = binomial)
summary(model)
# Perform the Hosmer-Lemeshow test
hoslem.test <- function(model) {
observed <- birthweight_analysis$low
expected <- predict(model, type = "response")
chisq <- sum((observed - expected)^2 / expected)
df <- df.residual(model)
p_value <- pchisq(chisq, df, lower.tail = FALSE)
return(p_value)
}
# Calculate the p-value for the Hosmer-Lemeshow test
p_value <- hoslem.test(model)
p_value
# Calculate the odds ratio for smoking during pregnancy
odds_ratio <- exp(coef(model)["smoke"])
odds_ratio
# 95% Confidence Interval
conf_int <- exp(confint(model)["smoke", ])
conf_int
library(naniar)
birthweight_original <- read.csv("birthweight_original.csv")
birthweight_analysis <- read.csv("birthweight_analysisdata.csv")
birthweight_analysis <- na.omit(birthweight_analysis)
birthweight_original <- birthweight_original[birthweight_original$bp_sys > 0, ]
